apply plugin: 'jacoco'

jacoco {
    toolVersion = deps.versions.jacoco
    reportsDir = file("$buildDir/codeCoverageReports")
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task debugCombinedCodeCoverageReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    group = "Code coverage"
    description = "Generate coverage reports that combine both Unit and UI tests for debug builds"

    reports {
        html.enabled = true
    }

    def exclusions = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*'
    ]

    def javaClasses = fileTree(dir: "${buildDir}/intermediates/javac/debug/classes",
            excludes: exclusions)
    def kotlinClasses = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug",
            excludes: exclusions)

    classDirectories.setFrom(files([javaClasses, kotlinClasses]))
}
