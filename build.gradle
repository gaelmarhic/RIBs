buildscript {
    apply from: 'gradle/compose.gradle'
    apply from: 'gradle/dependencies.gradle'

    repositories {
        jcenter()
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://dl.bintray.com/kotlin/kotlin-eap/"
        }
    }
    dependencies {
        classpath deps.build.gradlePlugins.android
        classpath deps.build.gradlePlugins.kotlin
        classpath deps.build.gradlePlugins.mavenPublish
        classpath deps.build.gradlePlugins.detekt
        classpath deps.build.gradlePlugins.jacoco
    }
}

apply from: 'gradle/compose.gradle'
apply from: 'gradle/dependencies.gradle'
apply from: 'gradle/utils.gradle'

subprojects {
    buildscript {
        repositories {
            jcenter()
            maven { url deps.build.gradlePluginsUrl }
            maven { url "https://maven.google.com" }
            maven { url "https://plugins.gradle.org/m2/" }

            maven {
                url "https://dl.bintray.com/kotlin/kotlin-eap/"
            }
        }
    }

    repositories {
        jcenter {
            content {
                // just allow to include kotlinx projects
                // detekt needs 'kotlinx-html' for the html report
                includeGroup "org.jetbrains.kotlinx"
            }
        }
        maven { url deps.build.gradlePluginsUrl }
        maven { url "https://maven.google.com" }
        maven { url "https://www.jitpack.io" }

        maven {
            url "https://dl.bintray.com/kotlin/kotlin-eap/"
        }
    }

    configurations.all {
        resolutionStrategy.eachDependency {
        }
    }

    // Add '-compose' to all artifacts when building the compose variant.
    if (project.hasProperty('POM_ARTIFACT_ID') && useCompose.toBoolean()) {
        def artifactId = project.getProperty("POM_ARTIFACT_ID").toString()
        if (!artifactId.contains("compose")) {
            project.setProperty("POM_ARTIFACT_ID", project.getProperty("POM_ARTIFACT_ID") + "-compose")
        }
    }
}

configureDetektForAllSubprojects(project)

task clean(type: Delete) {
    delete rootProject.buildDir
}
